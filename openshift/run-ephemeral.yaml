apiVersion: v1
kind: Template
labels:
  app: esearchexporter
  template: esearchexporter-ephemeral
metadata:
  annotations:
    description: ElasticSearch exporter - ephemeral
      see https://github.com/Worteks/docker-esearchexporter
    iconClass: icon-openshift
    openshift.io/display-name: ElasticSearch Exporter
    tags: esearchexporter
  name: esearchexporter-ephemeral
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      name: elasticsearch-${FRONTNAME}
    name: elasticsearch-${FRONTNAME}
  spec:
    replicas: 1
    selector:
      name: elasticsearch-${FRONTNAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: elasticsearch-${FRONTNAME}
      spec:
        dnsPolicy: ClusterFirst
        containers:
        - capabilities: {}
          env:
          - name: ELASTICSEARCH_CLUSTER_NAME
            value: ${FRONTNAME}
          - name: ELASTICSEARCH_JVM_XMS
            value: "${ELASTICSEARCH_XMS}"
          - name: ELASTICSEARCH_JVM_XMX
            value: "${ELASTICSEARCH_XMX}"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 20
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            tcpSocket:
              port: 9200
          name: elasticsearch
          ports:
          - name: esearch
            containerPort: 9200
          - name: nodes
            containerPort: 9300
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - "-i"
              - "-c"
              - /is-ready.sh
            initialDelaySeconds: 40
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "${ELASTICSEARCH_CPU_LIMIT}"
              memory: "${ELASTICSEARCH_MEMORY_LIMIT}"
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - name: data
            mountPath: /var/lib/elasticsearch
        - image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 20
            tcpSocket:
              port: 9113
            timeoutSeconds: 3
          name: exporter
          ports:
          - containerPort: 9113
            protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: 9113
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "${EXPORTER_CPU_LIMIT}"
              memory: "${EXPORTER_MEMORY_LIMIT}"
        restartPolicy: Always
        volumes:
        - emptyDir: {}
          name: data
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - elasticsearch
        from:
          kind: ImageStreamTag
          name: ${ELASTICSEARCH_IMAGESTREAM_TAG}
        lastTriggeredImage: ''
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - exporter
        from:
          kind: ImageStreamTag
          name: esearchexporter-${ELASTICSEARCH_EXPORTER_IMAGE_FRONTNAME}:${ELASTICSEARCH_EXPORTER_IMAGE_TAG}
        lastTriggeredImage: ''
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch-${FRONTNAME}
  spec:
    ports:
    - name: esearch
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: nodes
      protocol: TCP
      port: 9300
      targetPort: 9300
    selector:
      name: elasticsearch-${FRONTNAME}
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes ElasticSearch Prometheus Exporter
    labels:
      ${PROMETHEUS_SERVICE_SELECTOR}: ${PROMETHEUS_SERVICE_MATCH}
    name: esearchexporter-${FRONTNAME}
  spec:
    ports:
    - name: exporter
      port: 9113
      targetPort: 9113
    selector:
      name: elasticsearch-${FRONTNAME}
    type: ClusterIP
parameters:
- name: ELASTICSEARCH_CPU_LIMIT
  description: Maximum amount of CPU an ElasticSearch container can use
  displayName: ElasticSearch CPU Limit
  required: true
  value: 300m
- name: ELASTICSEARCH_EXPORTER_IMAGE_FRONTNAME
  description: The name assigned to ImageStream object defined in corresponding template
  displayName: Name
  required: true
  value: wsweet
- name: ELASTICSEARCH_EXPORTER_IMAGE_TAG
  description: The ImageStreamTag we should pull images from
  displayName: Tag
  required: true
  value: master
- name: ELASTICSEARCH_IMAGESTREAM_TAG
  value: elasticsearch-wsweet:master
- name: ELASTICSEARCH_MEMORY_LIMIT
  description: Maximum amount of memory an ElasticSearch container can use
  displayName: ElasticSearch Memory Limit
  required: true
  value: 1300Mi
- name: ELASTICSEARCH_XMS
  value: 768m
- name: ELASTICSEARCH_XMX
  value: 768m
- name: EXPORTER_CPU_LIMIT
  description: Maximum amount of CPU an exporter container can use
  displayName: Exporters CPU Limit
  required: true
  value: 50m
- name: EXPORTER_MEMORY_LIMIT
  description: Maximum amount of Memory an exporter container can use
  displayName: Exporters Memory Limit
  required: true
  value: 64Mi
- name: FRONTNAME
  description: The name identifier assigned to objects defined in this template
  displayName: Name
  required: true
  value: demo
- name: PROMETHEUS_SERVICE_SELECTOR
  description: Prometheus Selector (key)
  displayName: Prometheus Service Selector Key
  required: true
  value: prometheus
- name: PROMETHEUS_SERVICE_MATCH
  description: Prometheus Selector (value)
  displayName: Prometheus Service Selector Value
  required: true
  value: scrape-me
